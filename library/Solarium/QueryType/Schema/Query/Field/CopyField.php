<?php
/** 
 * CopyField.php
 * Generated by PhpStorm - 06/2015
 * Project solarium
 * @author Beno!t POLASZEK
**/

namespace Solarium\QueryType\Schema\Query\Field;


use Solarium\Core\ArrayableInterface;

class CopyField implements ArrayableInterface {

    protected $source = '';

    protected $dest = array();

    protected $maxChars;

    public function __construct($source = null, $dest = null, $maxChars = null) {
        is_null($source) ?: $this->setSource($source);
        is_null($dest) ?: $this->setDest($dest);
        is_null($maxChars) ?: $this->setMaxChars($maxChars);
    }

    /**
     * @return string
     */
    public function getSource() {
        return $this->source;
    }

    /**
     * @param string $source
     * @return $this - Provides Fluent Interface
     */
    public function setSource($source) {
        $this->source = $source;
        return $this;
    }

    /**
     * @return array
     */
    public function getDest() {
        return $this->dest;
    }

    /**
     * @param array $dest
     * @return $this - Provides Fluent Interface
     */
    public function setDest($dest) {
        $this->dest = is_array($dest)? array_map(function($field) {
            return (string) $field;
        }, $dest) : array((string) $dest);
        return $this;
    }

    /**
     * @return mixed
     */
    public function getMaxChars() {
        return $this->maxChars;
    }

    /**
     * @param mixed $maxChars
     * @return $this - Provides Fluent Interface
     */
    public function setMaxChars($maxChars) {
        $this->maxChars = is_null($maxChars) ? null : (int) $maxChars;
        return $this;
    }

    /**
     * Get the instance as an array.
     *
     * @return array
     */
    public function castAsArray() {
        $output = array(
            'source' => $this->getSource(),
            'dest' => $this->getDest(),
        );
        if (!is_null($this->getMaxChars()))
            $output['maxChars'] = $this->getMaxChars();
        return $output;
    }

}