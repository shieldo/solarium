<?php
/** 
 * Tokenizer.php
 * Generated by PhpStorm - 06/2015
 * Project solarium
 * @author Beno!t POLASZEK
**/

namespace Solarium\QueryType\Schema\Query\FieldType\Analyzer\Tokenizer;


class Tokenizer implements TokenizerInterface {

    protected $class;
    protected $delimiter;

    public function __construct($class = null, $delimiter = null) {
        $this->class = $class;
        $this->delimiter = $delimiter;
    }

    /**
     * @return string
     */
    public function getClass() {
        return $this->class;
    }

    /**
     * @param string $class
     * @return $this - Provides Fluent Interface
     */
    public function setClass($class) {
        $this->class = $class;
        return $this;
    }

    /**
     * @return string
     */
    public function getDelimiter() {
        return $this->delimiter;
    }

    /**
     * @param string $delimiter
     * @return $this - Provides Fluent Interface
     */
    public function setDelimiter($delimiter) {
        $this->delimiter = $delimiter;
        return $this;
    }

    /**
     * Get the instance as an array.
     *
     * @return array
     */
    public function castAsArray() {
        $out = array('class' => $this->getClass());
        if (!is_null($this->getDelimiter()))
            $out['delimiter'] = $this->getDelimiter();
        return $out;
    }
}